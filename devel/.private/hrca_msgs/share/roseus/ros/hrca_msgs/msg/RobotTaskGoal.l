;; Auto-generated. Do not edit!


(when (boundp 'hrca_msgs::RobotTaskGoal)
  (if (not (find-package "HRCA_MSGS"))
    (make-package "HRCA_MSGS"))
  (shadow 'RobotTaskGoal (find-package "HRCA_MSGS")))
(unless (find-package "HRCA_MSGS::ROBOTTASKGOAL")
  (make-package "HRCA_MSGS::ROBOTTASKGOAL"))

(in-package "ROS")
;;//! \htmlinclude RobotTaskGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass hrca_msgs::RobotTaskGoal
  :super ros::object
  :slots (_action _pose1 _pose2 _object_name ))

(defmethod hrca_msgs::RobotTaskGoal
  (:init
   (&key
    ((:action __action) "")
    ((:pose1 __pose1) (instance geometry_msgs::PoseStamped :init))
    ((:pose2 __pose2) (instance geometry_msgs::PoseStamped :init))
    ((:object_name __object_name) "")
    )
   (send-super :init)
   (setq _action (string __action))
   (setq _pose1 __pose1)
   (setq _pose2 __pose2)
   (setq _object_name (string __object_name))
   self)
  (:action
   (&optional __action)
   (if __action (setq _action __action)) _action)
  (:pose1
   (&rest __pose1)
   (if (keywordp (car __pose1))
       (send* _pose1 __pose1)
     (progn
       (if __pose1 (setq _pose1 (car __pose1)))
       _pose1)))
  (:pose2
   (&rest __pose2)
   (if (keywordp (car __pose2))
       (send* _pose2 __pose2)
     (progn
       (if __pose2 (setq _pose2 (car __pose2)))
       _pose2)))
  (:object_name
   (&optional __object_name)
   (if __object_name (setq _object_name __object_name)) _object_name)
  (:serialization-length
   ()
   (+
    ;; string _action
    4 (length _action)
    ;; geometry_msgs/PoseStamped _pose1
    (send _pose1 :serialization-length)
    ;; geometry_msgs/PoseStamped _pose2
    (send _pose2 :serialization-length)
    ;; string _object_name
    4 (length _object_name)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _action
       (write-long (length _action) s) (princ _action s)
     ;; geometry_msgs/PoseStamped _pose1
       (send _pose1 :serialize s)
     ;; geometry_msgs/PoseStamped _pose2
       (send _pose2 :serialize s)
     ;; string _object_name
       (write-long (length _object_name) s) (princ _object_name s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _action
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _action (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; geometry_msgs/PoseStamped _pose1
     (send _pose1 :deserialize buf ptr-) (incf ptr- (send _pose1 :serialization-length))
   ;; geometry_msgs/PoseStamped _pose2
     (send _pose2 :deserialize buf ptr-) (incf ptr- (send _pose2 :serialization-length))
   ;; string _object_name
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _object_name (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get hrca_msgs::RobotTaskGoal :md5sum-) "7f2c64fd41eafea32d78342b5e64b8ad")
(setf (get hrca_msgs::RobotTaskGoal :datatype-) "hrca_msgs/RobotTaskGoal")
(setf (get hrca_msgs::RobotTaskGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal definition
string action #'hold', 'pick_and_place', 'move_to_pose', 'move_to_pose_cartesian', 'pick_and_handoff'
geometry_msgs/PoseStamped pose1
geometry_msgs/PoseStamped pose2
string object_name

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :hrca_msgs/RobotTaskGoal "7f2c64fd41eafea32d78342b5e64b8ad")


